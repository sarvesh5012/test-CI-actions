name: Merge Request Gate Pipeline

on:
  pull_request:
    branches:
      - master  # Trigger on pull requests to master branch

jobs:
  # Job to validate pipeline/task yml files
  pipeline-merge-request-gate:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # Notify GitLab MR - Running
    - name: Notify GitLab MR - Status Running
      run: |
        curl --request POST \
        --header "PRIVATE-TOKEN: ${{ secrets.GITLAB_TOKEN }}" \
        --form "state_event=running" \
        ${{ secrets.GITLAB_URL }}/api/v4/projects/${{ secrets.GITLAB_PROJECT }}/merge_requests/${{ github.event.pull_request.number }}

    # Lint the pipeline files - directly run shell script inline
    - name: Fly Lint Pipeline
      run: |
        #!/bin/bash

        # Variables directly inlined from common.yml and runway-production.yml
        gitlab_url="https://gitlab.eng.vmware.com"
        gitlab_username="${{ secrets.GITLAB_USERNAME }}"  # Inlined from common.yml
        gitlab_token="${{ secrets.GITLAB_TOKEN }}"        # Inlined from common.yml
        artifactory_url="sdwan-docker-dev-virtual.usw1.packages.broadcom.com/velocloud_techops"  # Inlined from common.yml
        gitlab_project="velo-tech-ops/ansible/sd-wan"     # Inlined from runway-production.yml
        default_branch="master"                           # Inlined from runway-production.yml

        # Simulate the Fly CLI validation command with inlined variable content
        echo "Validating pipeline for project: $gitlab_project on branch: $default_branch"
        echo "Artifactory URL: $artifactory_url"

        # Fly CLI validation command (replace with actual fly command if needed)
        fly validate-pipeline --config=ci/pipelines/pipeline.yml --var "gitlab-url=$gitlab_url" --var "gitlab-project=$gitlab_project" --var "artifactory-url=$artifactory_url"

    # Notify GitLab MR on failure
    - name: Notify GitLab MR - Status Failed
      if: failure()
      run: |
        curl --request POST \
        --header "PRIVATE-TOKEN: ${{ secrets.GITLAB_TOKEN }}" \
        --form "state_event=failed" \
        ${{ secrets.GITLAB_URL }}/api/v4/projects/${{ secrets.GITLAB_PROJECT }}/merge_requests/${{ github.event.pull_request.number }}

    # Notify GitLab MR on error
    - name: Notify GitLab MR - Status Error
      if: error()
      run: |
        curl --request POST \
        --header "PRIVATE-TOKEN: ${{ secrets.GITLAB_TOKEN }}" \
        --form "state_event=failed" \
        ${{ secrets.GITLAB_URL }}/api/v4/projects/${{ secrets.GITLAB_PROJECT }}/merge_requests/${{ github.event.pull_request.number }}

    # Notify GitLab MR on abort
    - name: Notify GitLab MR - Status Canceled
      if: cancelled()
      run: |
        curl --request POST \
        --header "PRIVATE-TOKEN: ${{ secrets.GITLAB_TOKEN }}" \
        --form "state_event=canceled" \
        ${{ secrets.GITLAB_URL }}/api/v4/projects/${{ secrets.GITLAB_PROJECT }}/merge_requests/${{ github.event.pull_request.number }}

    # Notify GitLab MR on success
    - name: Notify GitLab MR - Status Success
      if: success()
      run: |
        curl --request POST \
        --header "PRIVATE-TOKEN: ${{ secrets.GITLAB_TOKEN }}" \
        --form "state_event=success" \
        ${{ secrets.GITLAB_URL }}/api/v4/projects/${{ secrets.GITLAB_PROJECT }}/merge_requests/${{ github.event.pull_request.number }}
